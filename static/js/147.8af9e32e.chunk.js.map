{"version":3,"file":"static/js/147.8af9e32e.chunk.js","mappings":"4OAGaA,G,SAAmBC,EAAAA,EAAAA,UAASC,MAAM,CAC7CC,MAAMC,EAAAA,EAAAA,UAASC,OAAOC,SAASC,WAC/BC,QAAQJ,EAAAA,EAAAA,UAASK,MAAM,MAAMF,cAGlBG,GAAwBT,EAAAA,EAAAA,UAASC,MAAM,CAClDC,MAAMC,EAAAA,EAAAA,UAASC,OAAOC,SAASC,SAAS,cACxCI,OAAOP,EAAAA,EAAAA,UAASO,MAAM,sBAAsBJ,SAAS,qBACrDK,UAAUR,EAAAA,EAAAA,UACPG,SAAS,uBACTM,IAAI,EAAG,0CACPC,IAAI,GAAI,YACXC,iBAAiBX,EAAAA,EAAAA,UACdY,MAAM,EAACC,EAAAA,EAAAA,KAAI,aAAc,6BACzBV,SAAS,kCAGDW,GAAqBjB,EAAAA,EAAAA,UAASC,MAAM,CAC/CS,OAAOP,EAAAA,EAAAA,UAASO,MAAM,sBAAsBJ,SAAS,qBACrDK,UAAUR,EAAAA,EAAAA,UACPG,SAAS,uBACTM,IAAI,EAAG,0CACPC,IAAI,GAAI,a,qLCnBAK,EAAU,WACrB,IAMMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,GAAI,CAAEC,eAAgB,UAAtC,UACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAKC,EAAG,EAAR,WACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BACA,SAAC,KAAD,CACEC,cAxBW,CACnB5B,KAAM,GACNQ,MAAO,GACPC,SAAU,GACVG,gBAAiB,IAqBTiB,iBAAkBtB,EAAAA,GAClBuB,SAnBW,SAACC,EAAQC,GAC5Bf,GACEgB,EAAAA,EAAAA,IAAW,CACTjC,KAAM+B,EAAO/B,KACbQ,MAAOuB,EAAOvB,MACdC,SAAUsB,EAAOtB,YAGrBuB,EAAME,WACP,EAOO,SAKG,SAAAF,GACC,IAAQhC,EAASgC,EAAMD,OAAf/B,KACR,OACE,UAAC,KAAD,YAEE,SAACmC,EAAA,EAAD,CACEC,MAAM,OACNpC,KAAK,OACLqC,WAAS,EACTV,QAAQ,WACRW,OAAO,QACPC,MAAOvC,EACPwC,SAAUR,EAAMS,aAChBC,OAAQV,EAAMW,WACdC,YAAY,SAAC,KAAD,CAAc5C,KAAK,SAC/B6C,MAAOb,EAAMc,OAAO9C,MAAQgC,EAAMe,QAAQ/C,KAC1CI,UAAQ,KAGV,SAAC,KAAD,CACE4C,GAAIb,EAAAA,EACJC,MAAM,QACNa,KAAK,QACLjD,KAAK,QACLqC,WAAS,EACTV,QAAQ,WACRW,OAAO,QACPM,YAAY,SAAC,KAAD,CAAc5C,KAAK,UAC/B6C,MAAOb,EAAMc,OAAOtC,OAASwB,EAAMe,QAAQvC,SAG7C,SAAC,KAAD,CACEwC,GAAIb,EAAAA,EACJC,MAAM,WACNpC,KAAK,WACLiD,KAAK,WACLZ,WAAS,EACTV,QAAQ,WACRW,OAAO,QACPM,YAAY,SAAC,KAAD,CAAc5C,KAAK,aAC/B6C,MAAOb,EAAMc,OAAOrC,UAAYuB,EAAMe,QAAQtC,YAGhD,SAAC,KAAD,CACEuC,GAAIb,EAAAA,EACJC,MAAM,mBACNpC,KAAK,kBACLiD,KAAK,WACLZ,WAAS,EACTV,QAAQ,WACRW,OAAO,QACPM,YAAY,SAAC,KAAD,CAAc5C,KAAK,oBAC/B6C,MACEb,EAAMc,OAAOlC,iBACboB,EAAMe,QAAQnC,mBAGlB,SAACsC,EAAA,EAAD,CACEvB,QAAQ,YACRsB,KAAK,SACLE,MAAM,UACNd,WAAS,EAJX,sBAUL,UAMZ,ECvGD,EAHiB,WACf,OAAO,SAACrB,EAAD,GACR,C","sources":["components/helpers/yupValidation.js","components/RegForm/RegForm.jsx","pages/Register.jsx"],"sourcesContent":["import { string, object, ref } from 'yup';\nimport 'yup-phone';\n\nexport const contactYupSchema = object().shape({\n  name: string().trim().strict().required(),\n  number: string().phone('UA').required(),\n});\n\nexport const yupRegisterValidation = object().shape({\n  name: string().trim().strict().required('Required !'),\n  email: string().email('Enter a Vaid Email').required('Email is Required'),\n  password: string()\n    .required('Enter Your Password')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n  confirmPassword: string()\n    .oneOf([ref('password')], 'Password does not matched')\n    .required('Confirm Password is Required'),\n});\n\nexport const yupLoginValidation = object().shape({\n  email: string().email('Enter a Vaid Email').required('Email is Required'),\n  password: string()\n    .required('Enter Your Password')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n});\n","import { Box, Button, Grid, Paper, TextField, Typography } from '@mui/material';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { yupRegisterValidation } from 'components/helpers/yupValidation';\nimport { useDispatch } from 'react-redux';\nimport { userSignup } from 'redux/auth/authService';\n\nexport const RegForm = () => {\n  const initialValue = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n  const dispatch = useDispatch();\n  const handleSubmit = (values, props) => {\n    dispatch(\n      userSignup({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    props.resetForm();\n  };\n\n  return (\n    <Grid container sx={{ justifyContent: 'center' }}>\n      <Paper>\n        <Box p={5}>\n          <Typography variant=\"h5\">Registration</Typography>\n          <Formik\n            initialValues={initialValue}\n            validationSchema={yupRegisterValidation}\n            onSubmit={handleSubmit}\n          >\n            {props => {\n              const { name } = props.values;\n              return (\n                <Form>\n                  {/* Name */}\n                  <TextField\n                    label=\"Name\"\n                    name=\"name\"\n                    fullWidth\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    value={name}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                    helperText={<ErrorMessage name=\"name\" />}\n                    error={props.errors.name && props.touched.name}\n                    required\n                  />\n                  {/* Email */}\n                  <Field\n                    as={TextField}\n                    label=\"Email\"\n                    type=\"Email\"\n                    name=\"email\"\n                    fullWidth\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    helperText={<ErrorMessage name=\"email\" />}\n                    error={props.errors.email && props.touched.email}\n                  />\n                  {/* Password */}\n                  <Field\n                    as={TextField}\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    fullWidth\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    helperText={<ErrorMessage name=\"password\" />}\n                    error={props.errors.password && props.touched.password}\n                  />\n                  {/* Confirm Password */}\n                  <Field\n                    as={TextField}\n                    label=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    fullWidth\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    helperText={<ErrorMessage name=\"confirmPassword\" />}\n                    error={\n                      props.errors.confirmPassword &&\n                      props.touched.confirmPassword\n                    }\n                  />\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    fullWidth\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n};\n","import { RegForm } from 'components/RegForm/RegForm';\n\nconst Register = () => {\n  return <RegForm />;\n};\nexport default Register;\n"],"names":["contactYupSchema","object","shape","name","string","trim","strict","required","number","phone","yupRegisterValidation","email","password","min","max","confirmPassword","oneOf","ref","yupLoginValidation","RegForm","dispatch","useDispatch","Grid","container","sx","justifyContent","Paper","Box","p","Typography","variant","initialValues","validationSchema","onSubmit","values","props","userSignup","resetForm","TextField","label","fullWidth","margin","value","onChange","handleChange","onBlur","handleBlur","helperText","error","errors","touched","as","type","Button","color"],"sourceRoot":""}